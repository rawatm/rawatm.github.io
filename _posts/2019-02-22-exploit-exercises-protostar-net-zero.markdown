---
layout: post
title:  "Protostar net0 challenge"
date:   2019-02-22 18:26:36 +0530
categories: exploit.education protostar net-zero
---
This exercise is simple and pertains to how networking works.
[net-zero][net-zero-link]
{% highlight cpp %}
#include "../common/common.c"

#define NAME "net0"
#define UID 999
#define GID 999
#define PORT 2999

void run()
{
  unsigned int i;
  unsigned int wanted;

  wanted = random();

  printf("Please send '%d' as a little endian 32bit int\n", wanted);

  if(fread(&i, sizeof(i), 1, stdin) == NULL) {
      errx(1, ":(\n");
  }

  if(i == wanted) {
      printf("Thank you sir/madam\n");
  } else {
      printf("I'm sorry, you sent %d instead\n", i);
  }
}

int main(int argc, char **argv, char **envp)
{
  int fd;
  char *username;

  /* Run the process as a daemon */
  background_process(NAME, UID, GID); 
  
  /* Wait for socket activity and return */
  fd = serve_forever(PORT);

  /* Set the client socket to STDIN, STDOUT, and STDERR */
  set_io(fd);

  /* Don't do this :> */
  srandom(time(NULL));

  run();
}
{% endhighlight %}
Code for some background functions which create and listen to network connections is implemented in `#include "../common/common.c"`


{% highlight shell %}
user@protostar:/opt/protostar/bin$ ps aux | grep net0
999       1374  0.0  0.0   1532   272 ?        Ss   08:17   0:00 /opt/protostar/bin/net0
user      1651  2.0  0.1   3300   732 pts/0    S+   10:14   0:00 grep net0

user@protostar:/opt/protostar/bin$ echo -e "`cat -`" | nc 127.0.0.1 2999
Please send '1872268145' as a little endian 32bit int
q\x8b\x98o
Thank you sir/madam

$ python 
>>> import struct
>>> struct.pack("I", 1872268145)
'q\x8b\x98o'
>>>
{% endhighlight %}

[net-zero-link]:https://exploit.education/protostar/net-zero/